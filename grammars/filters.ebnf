
(* The top-level 'filter' rule: *)

Filter = Value, [ Spaces ], { Operator, [ Spaces ],  Value, [ Spaces ] } ;

Value = Identifier | Number ;

(* The white-space: *)

Space = ' ' | '\t' ;

Spaces = Space, { Space } ;

(* Operator tokens: *)

Operator = '<' | '>' | '=' | AND | OR ;

AND = "AND" ; (* a hort-hand for: AND = 'A', 'N', 'D' *)
NOT = "NOT" ;
OR = "OR" ;

(* Identifier syntax *)

Identifier = Letter, { Letter | Digit } ;

Letter =
    "A" | "B" | "C" | "D" | "E" | "F" | "G" | "H" | "I" | "J" | "K" | "L" |
    "M" | "N" | "O" | "P" | "Q" | "R" | "S" | "T" | "U" | "V" | "W" | "X" |
    "Y" | "Z" | "a" | "b" | "c" | "d" | "e" | "f" | "g" | "h" | "i" | "j" |
    "k" | "l" | "m" | "n" | "o" | "p" | "q" | "r" | "s" | "t" | "u" | "v" |
    "w" | "x" | "y" | "z" | "_"
;

(* Number token syntax: *)

Number = [ Sign ] ,
         ( Digits, [ '.', [ Digits ] ] | '.' , Digits ),
         [ Exponent ] ;

Exponent =  ( 'e' | 'E' ) , [ Sign ] , Digits ;

Sign = '+' | '-' ;

Digits =  Digit, { Digit } ;

Digit = '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9' ;

